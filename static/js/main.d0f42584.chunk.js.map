{"version":3,"sources":["Element.jsx","SelectedElement.jsx","MultiDropDown.jsx","sData.jsx","App.js","index.js"],"names":["Element","value","label","onClick","clrCdTxt","clrCd","useState","isHovering","setIsHovering","className","style","backgroundColor","color","onMouseEnter","onMouseLeave","e","SelectedElement","handleDelete","size","type","fontSize","MultiDropDown","options","preSelected","unSelectedItems","filter","find","preSelectedItem","showDropdown","setShowDropdown","selectedElement","setSelectedElement","unSelectedElement","setUnSelectedElement","ref","useRef","refInp","stopPropagation","itm","item","prevarr","handleView","current","prevValue","length","map","element","selectedItem","preval","App","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.d0f42584.chunk.js","sourcesContent":["import React from \"react\";\nimport {useState} from 'react';\nimport \"./index.css\";\n\nfunction Element({value,label, onClick, clrCdTxt, clrCd}) {\n    const [isHovering, setIsHovering] = useState(false);\n\n    const handleMouseEnter = () => {\n        setIsHovering(true);\n    };\n\n    const handleMouseLeave = () => {\n        setIsHovering(false);\n    };\n    \n    return (\n        <>\n            <div\n                className=\"element\"\n                style={{backgroundColor: isHovering ? clrCd : '', color:clrCdTxt}}\n                onMouseEnter={handleMouseEnter}\n                onMouseLeave={handleMouseLeave}\n                onClick={(e) => onClick(value, e)}\n            >\n                <p className=\"ElementVal\">{label}</p>\n            </div>\n        </>\n    );\n}\n\nexport default Element;\n","import React from \"react\";\nimport {useState} from 'react';\nimport ClearIcon from '@mui/icons-material/Clear';\n\nexport function SelectedElement({ label, handleDelete, value, clrCd, clrCdTxt }) {\n\n    const [isHovering, setIsHovering] = useState(false);\n\n    const handleMouseEnter = () => {\n        setIsHovering(true);\n    };\n\n    const handleMouseLeave = () => {\n        setIsHovering(false);\n    };\n\n    return (\n        <>\n            <div className=\"selectedElement\" style={{ backgroundColor: clrCd, color: clrCdTxt }}>\n                <div className=\"selectedElementText\">\n                    <p>{label}</p>\n                </div>\n                <div \n                    className=\"selectedElementDeleteBtn\"\n                    style={{backgroundColor: isHovering ? clrCdTxt : ''}}\n                    onMouseEnter={handleMouseEnter}\n                    onMouseLeave={handleMouseLeave}\n                >\n                    <button\n                        style={{color: isHovering ?  'white' : ''}} \n                        size=\"small\"\n                        className=\"deleteBtn\"\n                        type=\"delete\"\n                        onClick={(e) => handleDelete(value, e)}\n                    >\n                        <ClearIcon fontSize=\"small\" />\n                    </button>\n                </div>\n            </div>\n        </>\n    );\n}","import React, { useRef, useState } from \"react\";\nimport \"./index.css\";\nimport Element from './Element';\nimport { SelectedElement } from \"./SelectedElement\";\nimport KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown';\nimport CancelIcon from '@mui/icons-material/Cancel';\n\nfunction MultiDropDown({ options, preSelected }) {\n\n    const unSelectedItems = options.filter(function (unSelectedItems) {\n        return !preSelected.find(function (preSelectedItem) {\n            return unSelectedItems.value === preSelectedItem.value\n        })\n    })\n\n    const [showDropdown, setShowDropdown] = useState(false);\n    const [selectedElement, setSelectedElement] = useState(preSelected);\n    const [unSelectedElement, setUnSelectedElement] = useState(unSelectedItems);\n\n    const ref = useRef();\n    const refInp = useRef();\n\n    const handleDelete = (color, e) => {\n        e.stopPropagation();\n        const itm = selectedElement.find((item) => item.value === color);\n        setUnSelectedElement(prevarr => [...prevarr, itm]);\n        setSelectedElement(selectedElement.filter((item) => item.value !== color));\n    }\n\n    const DeleteAll = () => {\n        selectedElement.map((selectedItem) => setUnSelectedElement((preval) => [...preval,selectedItem] )\n        )\n        setSelectedElement(() => []);\n    }\n \n    const handleView = (color, e) => {\n        e.stopPropagation();\n        const itm = options.find((item) => item.value === color);\n        setUnSelectedElement(unSelectedElement.filter((item) => item.value !== color));\n        setSelectedElement((prevarr) => [...prevarr, itm]);\n    }\n    const hideDropdown = () => {\n        if (!showDropdown) {\n            ref.current.className = \"element-box hidden\";\n            refInp.current.className = \"input inpHover\";\n        }\n    }\n    const handleShowDropdown = (e) => {\n        e.stopPropagation();\n        setShowDropdown((prevValue) => !prevValue);\n        if (showDropdown) {\n            ref.current.className = \"element-box\";\n            refInp.current.className = \"input clicked\";\n        }\n        else {\n            ref.current.className = \"element-box hidden\";\n            refInp.current.className = \"input inpHover\";\n        }\n    }\n\n    return (\n        <>\n            <div className=\"parent\" onClick={hideDropdown}>\n                <div className=\"structure\">\n                    <div className=\"input inpHover\" onClick={handleShowDropdown} ref={refInp} >\n                        <div className=\"selectedElementParent\">\n                            {!selectedElement.length ? <p className=\"placeHolderInput\">Select...</p> :\n                                (selectedElement.map((element) => <SelectedElement\n                                    key={element.value}\n                                    value={element.value}\n                                    label={element.label}\n                                    handleDelete={handleDelete}\n                                    clrCd={element.clrCd}\n                                    clrCdTxt={element.clrCdTxt}\n                                />\n                                ))\n                            }\n                        </div>\n                        {selectedElement.length ?(\n                            <span className=\"crossIconParent\"> \n                                <CancelIcon className=\"crossIcon\" onClick={DeleteAll} fontSize='small' /> \n                            </span> \n                        ) : <></> }\n                        <span className=\"downArrow\"> <KeyboardArrowDownIcon className=\"downArrowIcon\"/> </span>\n                    </div>\n                    <div className='element-box hidden' ref={ref}>\n                        {!unSelectedElement.length ? <p className=\"placeHolderMenuBox\">No More Values</p> :\n                            (unSelectedElement.map((element) => {\n                                return (\n                                    <Element\n                                        key={element.value}\n                                        value={element.value}\n                                        label={element.label}\n                                        clrCd={element.clrCd}\n                                        clrCdTxt={element.clrCdTxt}\n                                        onClick={handleView}\n                                    />\n                                );\n                            }))}\n                    </div>\n                </div>\n            </div>\n        </>\n    )\n}\n\nexport default MultiDropDown;","export const options = [\n    { value: 'red', label: 'Red', clrCd: 'rgba(255, 86, 48, 0.1)', clrCdTxt:'rgb(255, 86, 48)' },\n    { value: 'green', label: 'Green', clrCd: 'rgba(54, 179, 126, 0.1)', clrCdTxt:'rgb(54, 179, 126)' },\n    { value: 'blue', label: 'Blue', clrCd: 'rgba(0, 82, 204, 0.1)', clrCdTxt:'rgb(0, 82, 204)' },\n    { value: 'yellow', label: 'Yellow', clrCd: 'rgba(255, 196, 0, 0.1)', clrCdTxt:'rgb(255, 196, 0)' },\n    { value: 'pink', label: 'Pink', clrCd: '#FFE1E1', clrCdTxt:'#F06292' },\n    { value: 'purple', label: 'Purple', clrCd: 'rgba(82, 67, 170, 0.1)', clrCdTxt:'rgb(82, 67, 170)' },\n    { value: 'orange', label: 'Orange', clrCd: 'rgba(255, 139, 0, 0.1)', clrCdTxt:'rgb(255, 139, 0)' },\n    { value: 'silver', label: 'Silver', clrCd: 'rgba(102, 102, 102, 0.1)', clrCdTxt:'rgb(102, 102, 102)' },\n    { value: 'ocean', label: 'Ocean', clrCd: '#DFF6FF', clrCdTxt:'#5DA7DB' }\n]\n\n ","import React from 'react';\nimport \"./index.css\";\nimport MultiDropDown from './MultiDropDown';\nimport {options} from './sData';\n\nfunction App() {\n    return (\n        <>\n            <MultiDropDown\n                options={options}\n                preSelected={options.filter((item) => item.value === 'blue')}\n            />\n        </>\n    );\n}\n\nexport default App;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\"\n\nReactDOM.render(<App />, document.querySelector(\"#root\"));\n\n"],"sourceRoot":""}